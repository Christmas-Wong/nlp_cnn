Building prefix dict from the default dictionary ...
Loading model from cache C:\Users\chris\AppData\Local\Temp\jieba.cache
Loading model cost 0.330 seconds.
Prefix dict has been built successfully.




100%|██████████| 53360/53360 [00:11<00:00, 4743.75it/s]
[32m2022-03-20 00:09:24.511[39m | [1mINFO    [22m | [36msource.embedding.word2vec[39m:[36mword2vec_train[39m:[36m28[39m - [1mWord2vec Training Start 
[32m2022-03-20 00:09:57.996[39m | [1mINFO    [22m | [36msource.embedding.word2vec[39m:[36mword2vec_train[39m:[36m45[39m - [1mWord2vec Training End, Cost【33.484989166259766】Seconds 
100%|██████████| 31844/31844 [00:00<00:00, 250640.69it/s]
  0%|          | 0/100 [00:00<?, ?it/s]
  0%|          | 0/100 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "D:\app\pycharm\PyCharm 2021.3.2\plugins\python\helpers\pydev\pydevd.py", line 1483, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "D:\app\pycharm\PyCharm 2021.3.2\plugins\python\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "E:/project/nlp_cnn-main/python_runner.py", line 21, in <module>
    run(config)
  File "E:\project\nlp_cnn-main\source\pipeline\classification.py", line 116, in run
    trainer.train()
  File "E:\project\nlp_cnn-main\source\core\trainer.py", line 56, in train
    logits = self.model(batch_x)
  File "D:\app\conda\envs\pytorch\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "E:\project\nlp_cnn-main\source\model\dpcnn.py", line 84, in forward
    x = self.dropout(torch.cat(x, dim=1))
TypeError: cat() received an invalid combination of arguments - got (Tensor, dim=int), but expected one of:
 * (tuple of Tensors tensors, int dim, *, Tensor out)
